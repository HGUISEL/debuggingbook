<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="509pt" height="916pt"
 viewBox="0.00 0.00 508.50 916.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 912)">
<title>%3</title>
<g id="a_graph0"><a xlink:title="TarantulaDebugger class hierarchy">
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-912 504.5,-912 504.5,4 -4,4"/>
</a>
</g>
<!-- TarantulaDebugger -->
<g id="node1" class="node">
<title>TarantulaDebugger</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class TarantulaDebugger:&#10;Spectrum&#45;based Debugger using the Tarantula metric for suspiciousness">
<polygon fill="none" stroke="#000000" points="60,-9 60,-45 209,-45 209,-9 60,-9"/>
<text text-anchor="start" x="68" y="-24.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">TarantulaDebugger</text>
</a>
</g>
</g>
<!-- ContinuousSpectrumDebugger -->
<g id="node2" class="node">
<title>ContinuousSpectrumDebugger</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class ContinuousSpectrumDebugger:&#10;Visualize differences between executions using a color spectrum">
<polygon fill="none" stroke="#000000" points="0,-90.5 0,-231.5 227,-231.5 227,-90.5 0,-90.5"/>
<text text-anchor="start" x="8" y="-217.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">ContinuousSpectrumDebugger</text>
<polyline fill="none" stroke="#000000" points="0,-208.5 227,-208.5 "/>
<g id="a_node2_0"><a xlink:href="#" xlink:title="ContinuousSpectrumDebugger">
<g id="a_node2_1"><a xlink:href="#" xlink:title="brightness(self, event:Any) &#45;&gt; float">
<text text-anchor="start" x="35.5" y="-196.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">brightness()</text>
</a>
</g>
<g id="a_node2_2"><a xlink:href="#" xlink:title="collectors_with_event(self, event:Any, category:str) &#45;&gt; Set[__main__.Collector]:&#10;Return all collectors in a category&#10;that observed the given event.">
<text text-anchor="start" x="35.5" y="-185.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">collectors_with_event()</text>
</a>
</g>
<g id="a_node2_3"><a xlink:href="#" xlink:title="collectors_without_event(self, event:Any, category:str) &#45;&gt; Set[__main__.Collector]:&#10;Return all collectors in a category&#10;that did not observe the given event.">
<text text-anchor="start" x="35.5" y="-174.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">collectors_without_event()</text>
</a>
</g>
<g id="a_node2_4"><a xlink:href="#" xlink:title="color(self, event:Any) &#45;&gt; Union[str, NoneType]:&#10;Return a HTML color for the given event.">
<text text-anchor="start" x="35.5" y="-164.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">color()</text>
</a>
</g>
<g id="a_node2_5"><a xlink:href="#" xlink:title="event_fraction(self, event:Any, category:str) &#45;&gt; float">
<text text-anchor="start" x="35.5" y="-152.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">event_fraction()</text>
</a>
</g>
<g id="a_node2_6"><a xlink:href="#" xlink:title="failed_fraction(self, event:Any) &#45;&gt; float">
<text text-anchor="start" x="35.5" y="-141.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">failed_fraction()</text>
</a>
</g>
<g id="a_node2_7"><a xlink:href="#" xlink:title="hue(self, event:Any) &#45;&gt; Union[float, NoneType]:&#10;Return a color hue from 0.0 (red) to 1.0 (green).">
<text text-anchor="start" x="35.5" y="-130.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">hue()</text>
</a>
</g>
<g id="a_node2_8"><a xlink:href="#" xlink:title="passed_fraction(self, event:Any) &#45;&gt; float">
<text text-anchor="start" x="35.5" y="-119.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">passed_fraction()</text>
</a>
</g>
<g id="a_node2_9"><a xlink:href="#" xlink:title="suspiciousness(self, event:Any) &#45;&gt; Union[float, NoneType]:&#10;Return a suspiciousness value [0, 1.0]&#10;for the given event, or `None` if unknown.">
<text text-anchor="start" x="35.5" y="-109.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">suspiciousness()</text>
</a>
</g>
<g id="a_node2_10"><a xlink:href="#" xlink:title="tooltip(self, event:Any) &#45;&gt; str:&#10;Return a tooltip for the given event.">
<text text-anchor="start" x="35.5" y="-98.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">tooltip()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TarantulaDebugger&#45;&gt;ContinuousSpectrumDebugger -->
<g id="edge1" class="edge">
<title>TarantulaDebugger&#45;&gt;ContinuousSpectrumDebugger</title>
<path fill="none" stroke="#000000" d="M131.6678,-45.0718C130.178,-54.5787 128.2352,-66.9753 126.1756,-80.1173"/>
<polygon fill="none" stroke="#000000" points="122.674,-79.8555 124.5835,-90.2768 129.5896,-80.9393 122.674,-79.8555"/>
</g>
<!-- RankingDebugger -->
<g id="node7" class="node">
<title>RankingDebugger</title>
<g id="a_node7"><a xlink:href="#" xlink:title="class RankingDebugger:&#10;Rank events by their suspiciousness">
<polygon fill="none" stroke="#000000" points="245,-134.5 245,-187.5 380,-187.5 380,-134.5 245,-134.5"/>
<text text-anchor="start" x="253" y="-173.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-style="italic" font-size="14.00" fill="#6a0dad">RankingDebugger</text>
<polyline fill="none" stroke="#000000" points="245,-164.5 380,-164.5 "/>
<g id="a_node7_11"><a xlink:href="#" xlink:title="RankingDebugger">
<g id="a_node7_12"><a xlink:href="#" xlink:title="rank(self) &#45;&gt; List[Any]:&#10;Return a list of events, sorted by suspiciousness, highest first.">
<text text-anchor="start" x="282.5" y="-153.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">rank()</text>
</a>
</g>
<g id="a_node7_13"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Show code as string">
<text text-anchor="start" x="282.5" y="-142.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- TarantulaDebugger&#45;&gt;RankingDebugger -->
<g id="edge6" class="edge">
<title>TarantulaDebugger&#45;&gt;RankingDebugger</title>
<path fill="none" stroke="#000000" d="M167.2784,-45.0172C187.8301,-56.8473 214.5019,-73.1954 236.5,-90 251.2534,-101.2703 266.4157,-114.9408 279.2784,-127.2654"/>
<polygon fill="none" stroke="#000000" points="276.952,-129.8849 286.5656,-134.3381 281.8273,-124.8618 276.952,-129.8849"/>
</g>
<!-- DiscreteSpectrumDebugger -->
<g id="node3" class="node">
<title>DiscreteSpectrumDebugger</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class DiscreteSpectrumDebugger:&#10;Visualize differences between executions using three discrete colors">
<polygon fill="none" stroke="#000000" points="109.5,-268.5 109.5,-332.5 315.5,-332.5 315.5,-268.5 109.5,-268.5"/>
<text text-anchor="start" x="117.5" y="-318.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">DiscreteSpectrumDebugger</text>
<polyline fill="none" stroke="#000000" points="109.5,-309.5 315.5,-309.5 "/>
<g id="a_node3_14"><a xlink:href="#" xlink:title="DiscreteSpectrumDebugger">
<g id="a_node3_15"><a xlink:href="#" xlink:title="color(self, event:Any) &#45;&gt; Union[str, NoneType]:&#10;Return a HTML color for the given event.">
<text text-anchor="start" x="164.5" y="-298" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">color()</text>
</a>
</g>
<g id="a_node3_16"><a xlink:href="#" xlink:title="suspiciousness(self, event:Any) &#45;&gt; Union[float, NoneType]:&#10;Return a suspiciousness value [0, 1.0]&#10;for the given event, or `None` if unknown.">
<text text-anchor="start" x="164.5" y="-287" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">suspiciousness()</text>
</a>
</g>
<g id="a_node3_17"><a xlink:href="#" xlink:title="tooltip(self, event:Any) &#45;&gt; str:&#10;Return a tooltip for the given event.">
<text text-anchor="start" x="164.5" y="-276" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">tooltip()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- ContinuousSpectrumDebugger&#45;&gt;DiscreteSpectrumDebugger -->
<g id="edge2" class="edge">
<title>ContinuousSpectrumDebugger&#45;&gt;DiscreteSpectrumDebugger</title>
<path fill="none" stroke="#000000" d="M163.5801,-231.5674C170.4855,-241.2977 177.3758,-251.0068 183.7134,-259.9371"/>
<polygon fill="none" stroke="#000000" points="180.961,-262.1063 189.6028,-268.2358 186.6696,-258.0551 180.961,-262.1063"/>
</g>
<!-- SpectrumDebugger -->
<g id="node4" class="node">
<title>SpectrumDebugger</title>
<g id="a_node4"><a xlink:href="#" xlink:title="class SpectrumDebugger:&#10;A class to collect events for passing and failing outcomes.">
<polygon fill="none" stroke="#000000" points="137.5,-369.5 137.5,-477.5 287.5,-477.5 287.5,-369.5 137.5,-369.5"/>
<text text-anchor="start" x="145.5" y="-463.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">SpectrumDebugger</text>
<polyline fill="none" stroke="#000000" points="137.5,-454.5 287.5,-454.5 "/>
<g id="a_node4_18"><a xlink:href="#" xlink:title="SpectrumDebugger">
<g id="a_node4_19"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Show code as string">
<text text-anchor="start" x="164.5" y="-443" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-style="italic" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
<g id="a_node4_20"><a xlink:href="#" xlink:title="__str__(self) &#45;&gt; str:&#10;Show code as string">
<text text-anchor="start" x="164.5" y="-432" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__str__()</text>
</a>
</g>
<g id="a_node4_21"><a xlink:href="#" xlink:title="_repr_html_(self) &#45;&gt; str:&#10;When output in Jupyter, visualize as HTML">
<text text-anchor="start" x="164.5" y="-421" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">_repr_html_()</text>
</a>
</g>
<g id="a_node4_22"><a xlink:href="#" xlink:title="code(self, functions:Union[Set[Callable], NoneType]=None, *, color:bool=False, suspiciousness:bool=False, line_numbers:bool=True) &#45;&gt; str:&#10;Return a listing of `functions` (default: covered functions).&#10;If `color` is True, render as HTML, using suspiciousness colors.&#10;If `suspiciousness` is True, include suspiciousness values.&#10;If `line_numbers` is True (default), include line numbers.">
<text text-anchor="start" x="164.5" y="-410" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">code()</text>
</a>
</g>
<g id="a_node4_23"><a xlink:href="#" xlink:title="percentage(self, event:Any) &#45;&gt; str:&#10;Return the suspiciousness for the given event as percentage string.">
<text text-anchor="start" x="164.5" y="-398" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">percentage()</text>
</a>
</g>
<g id="a_node4_24"><a xlink:href="#" xlink:title="suspiciousness(self, event:Any) &#45;&gt; Union[float, NoneType]:&#10;Return a suspiciousness value in the range [0, 1.0]&#10;for the given event, or `None` if unknown.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="164.5" y="-388" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">suspiciousness()</text>
</a>
</g>
<g id="a_node4_25"><a xlink:href="#" xlink:title="tooltip(self, event:Any) &#45;&gt; str:&#10;Return a tooltip for the given event (default: percentage).&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="164.5" y="-377" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">tooltip()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- DiscreteSpectrumDebugger&#45;&gt;SpectrumDebugger -->
<g id="edge3" class="edge">
<title>DiscreteSpectrumDebugger&#45;&gt;SpectrumDebugger</title>
<path fill="none" stroke="#000000" d="M212.5,-332.8168C212.5,-340.8843 212.5,-349.824 212.5,-358.8544"/>
<polygon fill="none" stroke="#000000" points="209.0001,-359.0468 212.5,-369.0469 216.0001,-359.0469 209.0001,-359.0468"/>
</g>
<!-- DifferenceDebugger -->
<g id="node5" class="node">
<title>DifferenceDebugger</title>
<g id="a_node5"><a xlink:href="#" xlink:title="class DifferenceDebugger:&#10;A class to collect events for passing and failing outcomes.">
<polygon fill="none" stroke="#000000" points="139,-514.5 139,-685.5 286,-685.5 286,-514.5 139,-514.5"/>
<text text-anchor="start" x="147" y="-671.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-style="italic" font-size="14.00" fill="#6a0dad">DifferenceDebugger</text>
<polyline fill="none" stroke="#000000" points="139,-662.5 286,-662.5 "/>
<g id="a_node5_26"><a xlink:href="#" xlink:title="DifferenceDebugger">
<g id="a_node5_27"><a xlink:href="#" xlink:title="FAIL = &#39;FAIL&#39;">
<text text-anchor="start" x="200.5" y="-650.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">FAIL</text>
</a>
</g>
<g id="a_node5_28"><a xlink:href="#" xlink:title="PASS = &#39;PASS&#39;">
<text text-anchor="start" x="200.5" y="-639.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">PASS</text>
</a>
</g>
</a>
</g>
<polyline fill="none" stroke="#000000" points="139,-632.5 286,-632.5 "/>
<g id="a_node5_29"><a xlink:href="#" xlink:title="DifferenceDebugger">
<g id="a_node5_30"><a xlink:href="#" xlink:title="__enter__(self) &#45;&gt; Any:&#10;Enter a `with` block. Collect coverage and outcome;&#10;classify as FAIL if the block raises an exception,&#10;and PASS if it does not.">
<text text-anchor="start" x="158.5" y="-621.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__enter__()</text>
</a>
</g>
<g id="a_node5_31"><a xlink:href="#" xlink:title="__exit__(self, exc_tp:Type, exc_value:BaseException, exc_traceback:traceback) &#45;&gt; Union[bool, NoneType]:&#10;Exit the `with` block.">
<text text-anchor="start" x="158.5" y="-610.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__exit__()</text>
</a>
</g>
<g id="a_node5_32"><a xlink:href="#" xlink:title="all_fail_events(self) &#45;&gt; Set[Any]:&#10;Return all events observed in failing runs.">
<text text-anchor="start" x="158.5" y="-599.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">all_fail_events()</text>
</a>
</g>
<g id="a_node5_33"><a xlink:href="#" xlink:title="all_pass_events(self) &#45;&gt; Set[Any]:&#10;Return all events observed in passing runs.">
<text text-anchor="start" x="158.5" y="-588.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">all_pass_events()</text>
</a>
</g>
<g id="a_node5_34"><a xlink:href="#" xlink:title="collect_fail(self, *args:Any, **kwargs:Any) &#45;&gt; __main__.Collector:&#10;Return a collector for failing runs.">
<text text-anchor="start" x="158.5" y="-577.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">collect_fail()</text>
</a>
</g>
<g id="a_node5_35"><a xlink:href="#" xlink:title="collect_pass(self, *args:Any, **kwargs:Any) &#45;&gt; __main__.Collector:&#10;Return a collector for passing runs.">
<text text-anchor="start" x="158.5" y="-566.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">collect_pass()</text>
</a>
</g>
<g id="a_node5_36"><a xlink:href="#" xlink:title="only_fail_events(self) &#45;&gt; Set[Any]:&#10;Return all events observed only in failing runs.">
<text text-anchor="start" x="158.5" y="-555.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">only_fail_events()</text>
</a>
</g>
<g id="a_node5_37"><a xlink:href="#" xlink:title="only_pass_events(self) &#45;&gt; Set[Any]:&#10;Return all events observed only in passing runs.">
<text text-anchor="start" x="158.5" y="-544.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">only_pass_events()</text>
</a>
</g>
<g id="a_node5_38"><a xlink:href="#" xlink:title="fail_collectors(self) &#45;&gt; List[__main__.Collector]">
<text text-anchor="start" x="158.5" y="-532.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">fail_collectors()</text>
</a>
</g>
<g id="a_node5_39"><a xlink:href="#" xlink:title="pass_collectors(self) &#45;&gt; List[__main__.Collector]">
<text text-anchor="start" x="158.5" y="-521.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">pass_collectors()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- SpectrumDebugger&#45;&gt;DifferenceDebugger -->
<g id="edge4" class="edge">
<title>SpectrumDebugger&#45;&gt;DifferenceDebugger</title>
<path fill="none" stroke="#000000" d="M212.5,-477.896C212.5,-486.2856 212.5,-495.1563 212.5,-504.1329"/>
<polygon fill="none" stroke="#000000" points="209.0001,-504.2927 212.5,-514.2927 216.0001,-504.2928 209.0001,-504.2927"/>
</g>
<!-- StatisticalDebugger -->
<g id="node6" class="node">
<title>StatisticalDebugger</title>
<g id="a_node6"><a xlink:href="#" xlink:title="class StatisticalDebugger:&#10;A class to collect events for multiple outcomes.">
<polygon fill="none" stroke="#000000" points="138.5,-722.5 138.5,-907.5 286.5,-907.5 286.5,-722.5 138.5,-722.5"/>
<text text-anchor="start" x="146.5" y="-893.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-style="italic" font-size="14.00" fill="#6a0dad">StatisticalDebugger</text>
<polyline fill="none" stroke="#000000" points="138.5,-884.5 286.5,-884.5 "/>
<g id="a_node6_40"><a xlink:href="#" xlink:title="StatisticalDebugger">
<g id="a_node6_41"><a xlink:href="#" xlink:title="__init__(self, collector_class:Type=&lt;class &#39;__main__.CoverageCollector&#39;&gt;, log:bool=False):&#10;Constructor. Use instances of `collector_class` to collect events.">
<text text-anchor="start" x="155.5" y="-873.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">__init__()</text>
</a>
</g>
<g id="a_node6_42"><a xlink:href="#" xlink:title="all_events(self, outcome:Union[str, NoneType]=None) &#45;&gt; Set[Any]:&#10;Return a set of all events observed.">
<text text-anchor="start" x="155.5" y="-862.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">all_events()</text>
</a>
</g>
<g id="a_node6_43"><a xlink:href="#" xlink:title="coverage(self) &#45;&gt; Set[Tuple[Callable, int]]:&#10;Return a set of all (functions, line_numbers) observed">
<text text-anchor="start" x="155.5" y="-851.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">coverage()</text>
</a>
</g>
<g id="a_node6_44"><a xlink:href="#" xlink:title="covered_functions(self) &#45;&gt; Set[Callable]:&#10;Return a set of all functions observed.">
<text text-anchor="start" x="155.5" y="-840.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">covered_functions()</text>
</a>
</g>
<g id="a_node6_45"><a xlink:href="#" xlink:title="event_table(self, **_args:Any) &#45;&gt; Any:&#10;Print out event table in Markdown format.">
<text text-anchor="start" x="155.5" y="-829.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">event_table()</text>
</a>
</g>
<g id="a_node6_46"><a xlink:href="#" xlink:title="function(self) &#45;&gt; Union[Callable, NoneType]:&#10;Return the entry function from the events observed,&#10;or None if ambiguous.">
<text text-anchor="start" x="155.5" y="-818.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00" fill="#000000">function()</text>
</a>
</g>
<g id="a_node6_47"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; str:&#10;Return repr(self).">
<text text-anchor="start" x="155.5" y="-807.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">__repr__()</text>
</a>
</g>
<g id="a_node6_48"><a xlink:href="#" xlink:title="_repr_markdown_(self) &#45;&gt; str">
<text text-anchor="start" x="155.5" y="-795.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">_repr_markdown_()</text>
</a>
</g>
<g id="a_node6_49"><a xlink:href="#" xlink:title="add_collector(self, outcome:str, collector:__main__.Collector) &#45;&gt; __main__.Collector">
<text text-anchor="start" x="155.5" y="-784.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">add_collector()</text>
</a>
</g>
<g id="a_node6_50"><a xlink:href="#" xlink:title="collect(self, outcome:str, *args:Any, **kwargs:Any) &#45;&gt; __main__.Collector:&#10;Return a collector for the given outcome.&#10;Additional args are passed to the collector.">
<text text-anchor="start" x="155.5" y="-773.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">collect()</text>
</a>
</g>
<g id="a_node6_51"><a xlink:href="#" xlink:title="color(self, event:Any) &#45;&gt; Union[str, NoneType]:&#10;Return a color for the given event, or None.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="155.5" y="-763.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">color()</text>
</a>
</g>
<g id="a_node6_52"><a xlink:href="#" xlink:title="event_str(self, event:Any) &#45;&gt; str:&#10;Format the given event. To be overloaded in subclasses.">
<text text-anchor="start" x="155.5" y="-752.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">event_str()</text>
</a>
</g>
<g id="a_node6_53"><a xlink:href="#" xlink:title="event_table_text(self, *, args:bool=False, color:bool=False) &#45;&gt; str:&#10;Print out a table of events observed.&#10;If `args` is True, use arguments as headers.&#10;If `color` is True, use colors.">
<text text-anchor="start" x="155.5" y="-740.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00" fill="#000000">event_table_text()</text>
</a>
</g>
<g id="a_node6_54"><a xlink:href="#" xlink:title="tooltip(self, event:Any) &#45;&gt; Union[str, NoneType]:&#10;Return a tooltip string for the given event, or None.&#10;To be overloaded in subclasses.">
<text text-anchor="start" x="155.5" y="-730.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">tooltip()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- DifferenceDebugger&#45;&gt;StatisticalDebugger -->
<g id="edge5" class="edge">
<title>DifferenceDebugger&#45;&gt;StatisticalDebugger</title>
<path fill="none" stroke="#000000" d="M212.5,-685.5915C212.5,-694.355 212.5,-703.3213 212.5,-712.244"/>
<polygon fill="none" stroke="#000000" points="209.0001,-712.2863 212.5,-722.2863 216.0001,-712.2863 209.0001,-712.2863"/>
</g>
<!-- RankingDebugger&#45;&gt;DiscreteSpectrumDebugger -->
<g id="edge7" class="edge">
<title>RankingDebugger&#45;&gt;DiscreteSpectrumDebugger</title>
<path fill="none" stroke="#000000" d="M293.4554,-187.5672C278.7686,-208.0553 258.2071,-236.7386 241.4816,-260.0706"/>
<polygon fill="none" stroke="#000000" points="238.4927,-258.2328 235.5112,-268.3994 244.182,-262.3111 238.4927,-258.2328"/>
</g>
<!-- OchiaiDebugger -->
<g id="node8" class="node">
<title>OchiaiDebugger</title>
<g id="a_node8"><a xlink:href="#" xlink:title="class OchiaiDebugger:&#10;Spectrum&#45;based Debugger using the Ochiai metric for suspiciousness">
<polygon fill="none" stroke="#000000" points="238.5,-.5 238.5,-53.5 364.5,-53.5 364.5,-.5 238.5,-.5"/>
<text text-anchor="start" x="246.5" y="-39.3" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="14.00" fill="#6a0dad">OchiaiDebugger</text>
<polyline fill="none" stroke="#000000" points="238.5,-30.5 364.5,-30.5 "/>
<g id="a_node8_55"><a xlink:href="#" xlink:title="OchiaiDebugger">
<g id="a_node8_56"><a xlink:href="#" xlink:title="hue(self, event:Any) &#45;&gt; Union[float, NoneType]:&#10;Return a color hue from 0.0 (red) to 1.0 (green).">
<text text-anchor="start" x="253.5" y="-19.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">hue()</text>
</a>
</g>
<g id="a_node8_57"><a xlink:href="#" xlink:title="suspiciousness(self, event:Any) &#45;&gt; Union[float, NoneType]:&#10;Return a suspiciousness value [0, 1.0]&#10;for the given event, or `None` if unknown.">
<text text-anchor="start" x="253.5" y="-8.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00" fill="#000000">suspiciousness()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- OchiaiDebugger&#45;&gt;ContinuousSpectrumDebugger -->
<g id="edge8" class="edge">
<title>OchiaiDebugger&#45;&gt;ContinuousSpectrumDebugger</title>
<path fill="none" stroke="#000000" d="M263.9072,-53.7948C251.2496,-62.8168 236.4266,-73.3821 221.1111,-84.2985"/>
<polygon fill="none" stroke="#000000" points="218.6742,-81.7373 212.5624,-90.3917 222.7371,-87.4376 218.6742,-81.7373"/>
</g>
<!-- OchiaiDebugger&#45;&gt;RankingDebugger -->
<g id="edge9" class="edge">
<title>OchiaiDebugger&#45;&gt;RankingDebugger</title>
<path fill="none" stroke="#000000" d="M303.6996,-53.7948C305.3558,-73.9707 307.6457,-101.8652 309.4744,-124.1428"/>
<polygon fill="none" stroke="#000000" points="305.9977,-124.5715 310.3042,-134.2516 312.9743,-123.9987 305.9977,-124.5715"/>
</g>
<!-- Legend -->
<g id="node9" class="node">
<title>Legend</title>
<text text-anchor="start" x="382.5" y="-44.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-weight="bold" font-size="10.00" fill="#6a0dad">Legend</text>
<text text-anchor="start" x="382.5" y="-34.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="389.5" y="-34.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00" fill="#000000">public_method()</text>
<text text-anchor="start" x="382.5" y="-24.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="389.5" y="-24.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00" fill="#000000">private_method()</text>
<text text-anchor="start" x="382.5" y="-14.5" font-family="Raleway, Helvetica, Arial, sans-serif" font-size="10.00" fill="#000000">• </text>
<text text-anchor="start" x="389.5" y="-14.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00" fill="#000000">overloaded_method()</text>
<text text-anchor="start" x="382.5" y="-5.3" font-family="Helvetica,sans-Serif" font-size="9.00" fill="#000000">Hover over names to see doc</text>
</g>
</g>
</svg>
